# Workflow para crear releases automatizados con los zips del layer de dependencias 
# y el código de las funciones Lambda cada vez que se hace push a la rama 'development'
name: Deployment

on:
  push:
    branches:
      - development

permissions:
  contents: write
  releases: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          cd backend/
          mkdir -p release/layer
          mkdir -p release/code
          # Instalar dependencias de producción en el directorio layer
          pip install -r requirements-prod.txt -t release/layer

      - name: Create ZIP files
        run: |
          cd backend/
          # Crear ZIP del layer con las dependencias
          cd release/layer
          zip -r ../layer.zip .
          cd ../..
          
          # Copiar código fuente y crear ZIP del código
          cp -r src/* release/code/
          cd release/code
          zip -r ../code.zip .

      - name: Create release with timestamp
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: deployment-${{ github.run_number }}-${{ github.sha }}
          release_name: Finance Tracker Deployment ${{ github.run_number }}
          body: |
            Deployment automático desde la rama development
            - Commit: ${{ github.sha }}
            - Fecha: ${{ github.event.head_commit.timestamp }}
            - Layer: Dependencias de producción optimizadas
            - Code: Código fuente de las funciones Lambda
          draft: false
          prerelease: true

      - name: Upload Layer ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: backend/release/layer.zip
          asset_name: layer.zip
          asset_content_type: application/zip

      - name: Upload Code ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: backend/release/code.zip
          asset_name: code.zip
          asset_content_type: application/zip
