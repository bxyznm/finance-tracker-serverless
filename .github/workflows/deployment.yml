# Workflow para crear releases automatizados con los zips del layer de dependencias 
# y el código de las funciones Lambda cada vez que se hace push a la rama 'development'
# También se puede ejecutar manualmente desde la interfaz de GitHub
name: Deployment

on:
  push:
    branches:
      - development
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Tipo de release'
        required: false
        default: 'manual'
        type: choice
        options:
        - manual
        - hotfix
        - patch
      custom_tag:
        description: 'Tag personalizado (opcional)'
        required: false
        type: string

permissions:
  contents: write
  releases: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          cd backend/
          mkdir -p release/layer
          mkdir -p release/code
          # Instalar dependencias de producción en el directorio layer
          pip install -r requirements-prod.txt -t release/layer

      - name: Create ZIP files
        run: |
          cd backend/
          # Crear ZIP del layer con las dependencias
          cd release/layer
          zip -r ../layer.zip .
          cd ../..
          
          # Copiar código fuente y crear ZIP del código
          cp -r src/* release/code/
          cd release/code
          zip -r ../code.zip .

      - name: Create release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.custom_tag || format('{0}-{1}', inputs.release_type || 'deployment', github.run_number) }}
          name: Finance Tracker ${{ inputs.release_type && format('{0} {1}', inputs.release_type, github.run_number) || format('Deployment {0}', github.run_number) }}
          body: |
            ${{ github.event_name == 'workflow_dispatch' && 'Deployment manual' || 'Deployment automático desde la rama development' }}
            - Tipo: ${{ inputs.release_type || 'automático' }}
            - Commit: ${{ github.sha }}
            - Fecha: ${{ github.event.head_commit.timestamp || github.event.repository.pushed_at }}
            - Branch: ${{ github.ref_name }}
            - Layer: Dependencias de producción optimizadas
            - Code: Código fuente de las funciones Lambda
          files: |
            backend/release/layer.zip
            backend/release/code.zip
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
